<?php
 use App\Models\products; use App\Models\purchase_details; use App\Models\ref; use App\Models\sale_details; use App\Models\stock; use Carbon\Carbon; goto ROmnZ; jzz1V: function getStock($id) { $stocks = stock::where("\x70\x72\x6f\144\x75\143\164\111\x44", $id)->get(); $balance = 0; foreach ($stocks as $stock) { $balance += $stock->cr; $balance -= $stock->db; } return $balance; } goto CDOYg; ROmnZ: function getRef() { $ref = ref::first(); if ($ref) { $ref->ref = $ref->ref + 1; } else { $ref = new ref(); $ref->ref = 1; } $ref->save(); return $ref->ref; } goto gqRNX; gqRNX: function firstDayOfMonth() { $startOfMonth = Carbon::now()->startOfMonth(); return $startOfMonth->format("\x59\x2d\x6d\x2d\144"); } goto k7YkL; BdrEy: function stockValue() { $products = products::all(); $value = 0; foreach ($products as $product) { $value += productStockValue($product->id); } return $value; } goto MdCz9; J0UJd: function getStockDb($id) { $stocks = stock::where("\160\x72\157\x64\165\x63\164\x49\x44", $id)->get(); $balance = 0; foreach ($stocks as $stock) { $balance += $stock->db; } return $balance; } goto Ic_BI; gj_Hp: function getStockCr($id) { $stocks = stock::where("\160\162\x6f\144\165\x63\164\111\x44", $id)->get(); $balance = 0; foreach ($stocks as $stock) { $balance += $stock->cr; } return $balance; } goto Z5_Rr; h7qj5: function avgSalePrice($from, $to, $id) { $sales = sale_details::where("\160\x72\x6f\x64\165\143\164\x49\104", $id); if ($from != "\x61\x6c\x6c" && $to != "\141\154\154") { $sales->whereBetween("\x64\x61\x74\x65", array($from, $to)); } $sales_amount = $sales->sum("\141\x6d\x6f\165\x6e\164"); $sales_qty = $sales->sum("\x71\x74\x79"); if ($sales_qty > 0) { $sale_price = $sales_amount / $sales_qty; } else { $sale_price = 0; } return $sale_price; } goto ueShv; Q3PWg: function projectName() { return "\x41\x6c\x2d\x53\150\141\x66\151\x20\122\145\163\x74\141\165\x72\141\x6e\164"; } goto QJrdp; k7YkL: function lastDayOfMonth() { $endOfMonth = Carbon::now()->endOfMonth(); return $endOfMonth->format("\x59\x2d\x6d\x2d\144"); } goto XVWFz; Z5_Rr: function getWarehouseProductCr($id, $warehouse) { $stocks = stock::where("\x70\162\157\144\x75\x63\164\x49\104", $id)->where("\x77\x61\162\145\150\157\165\x73\145\x49\x44", $warehouse)->get(); $balance = 0; foreach ($stocks as $stock) { $balance += $stock->cr; } return $balance; } goto J0UJd; MdCz9: function productStockValue($id) { $stock = getStock($id); $price = avgPurchasePrice("\x61\154\154", "\141\154\154", $id); return $price * $stock; } goto hl3wI; Ic_BI: function getWarehouseProductDb($id, $warehouse) { $stocks = stock::where("\x70\162\157\144\x75\143\164\x49\x44", $id)->where("\x77\141\x72\145\x68\157\165\163\x65\111\104", $warehouse)->get(); $balance = 0; foreach ($stocks as $stock) { $balance += $stock->db; } return $balance; } goto h7qj5; CDOYg: function getStockByWarehouse($id, $warehouse) { $stocks = stock::where("\x70\x72\157\144\165\143\x74\111\104", $id)->where("\167\141\x72\145\x68\157\x75\163\x65\x49\x44", $warehouse)->get(); $balance = 0; foreach ($stocks as $stock) { $balance += $stock->cr; $balance -= $stock->db; } return $balance; } goto gj_Hp; ueShv: function avgPurchasePrice($from, $to, $id) { $purchases = purchase_details::where("\x70\162\x6f\144\165\143\x74\111\x44", $id); if ($from != "\x61\x6c\154" && $to != "\141\154\154") { $purchases->whereBetween("\144\x61\164\145", array($from, $to)); } $purchase_amount = $purchases->sum("\x61\x6d\157\165\x6e\x74"); $purchase_qty = $purchases->sum("\161\x74\171"); if ($purchase_qty > 0) { $purchase_price = $purchase_amount / $purchase_qty; } else { $purchase_price = 0; } return $purchase_price; } goto BdrEy; hl3wI: function warehouseProductStockValue($id, $warehouse) { $stock = getStockByWarehouse($id, $warehouse); $price = avgPurchasePrice("\x61\154\154", "\141\x6c\154", $id); return $price * $stock; } goto Q3PWg; XVWFz: function createStock($id, $cr, $db, $date, $notes, $ref, $warehouse) { stock::create(array("\x70\162\157\x64\165\143\x74\111\104" => $id, "\143\x72" => $cr, "\x64\142" => $db, "\x64\x61\164\145" => $date, "\x6e\157\x74\145\x73" => $notes, "\x72\x65\146\111\104" => $ref, "\x77\141\x72\x65\x68\157\x75\x73\145\111\x44" => $warehouse)); } goto jzz1V; QJrdp: function projectNameShort() { return "\101\x53\x52"; }