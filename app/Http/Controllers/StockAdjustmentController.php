<?php
 namespace App\Http\Controllers; use App\Models\products; use App\Models\stock; use App\Models\stockAdjustment; use App\Models\units; use App\Models\warehouses; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class StockAdjustmentController extends Controller { public function index() { $adjustments = stockAdjustment::orderBy("\x69\144", "\x64\145\x73\143")->get(); $products = products::all(); $warehouses = warehouses::all(); return view("\x73\x74\157\x63\x6b\x2e\141\144\152\165\x73\x74\155\145\156\x74\56\x69\x6e\144\145\170", compact("\141\x64\152\x75\163\164\155\x65\156\164\163", "\x70\162\157\x64\x75\x63\164\x73", "\167\x61\x72\145\150\157\165\x73\145\163")); } public function create() { } public function store(Request $request) { try { DB::beginTransaction(); $ref = getRef(); $qty = $request->qty; stockAdjustment::create(array("\x70\162\x6f\x64\x75\143\164\x49\104" => $request->productID, "\x77\x61\162\145\150\x6f\x75\163\145\111\x44" => $request->warehouseID, "\144\141\164\145" => $request->date, "\164\171\x70\145" => $request->type, "\x71\x74\171" => $request->qty, "\x6e\157\x74\x65\163" => $request->notes, "\x72\x65\146\x49\104" => $ref)); if ($request->type == "\x53\164\x6f\143\153\55\111\x6e") { createStock($request->productID, $qty, 0, $request->date, "\x53\x74\157\x63\153\55\111\156\72\x20{$request->notes}", $ref, $request->warehouseID); } else { createStock($request->productID, 0, $qty, $request->date, "\123\x74\x6f\x63\x6b\55\x4f\x75\164\x3a\x20{$request->notes}", $ref, $request->warehouseID); } DB::commit(); return back()->with("\163\x75\x63\x63\x65\x73\x73", "\x53\164\157\143\x6b\40\101\144\152\165\x73\164\155\x65\x6e\164\40\103\162\145\141\164\x65\x64"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\145\162\x72\x6f\162", $e->getMessage()); } } public function show(stockAdjustment $stockAdjustment) { } public function edit(stockAdjustment $stockAdjustment) { } public function update(Request $request, stockAdjustment $stockAdjustment) { } public function destroy($ref) { try { DB::beginTransaction(); stockAdjustment::where("\x72\145\146\111\x44", $ref)->delete(); stock::where("\162\x65\x66\x49\104", $ref)->delete(); DB::commit(); session()->forget("\x63\x6f\156\146\151\x72\x6d\145\144\x5f\160\141\163\163\x77\157\162\x64"); return redirect()->route("\x73\164\157\143\153\101\144\152\x75\x73\164\155\145\156\164\x73\56\x69\x6e\144\145\170")->with("\x73\x75\x63\x63\x65\163\x73", "\123\164\157\x63\x6b\x20\x41\144\152\165\x73\164\x6d\x65\x6e\x74\x20\x44\145\154\x65\x74\x65\x64"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\143\x6f\x6e\146\151\x72\155\x65\144\x5f\160\141\x73\x73\x77\x6f\162\x64"); return redirect()->route("\x73\164\157\143\x6b\x41\144\152\165\x73\164\x6d\145\x6e\164\163\x2e\151\x6e\144\145\170")->with("\145\162\162\157\162", $e->getMessage()); } } }