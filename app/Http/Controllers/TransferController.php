<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\transactions; use App\Models\transfer; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class TransferController extends Controller { public function index() { $transfers = transfer::orderby("\x69\x64", "\x64\x65\x73\143")->get(); $accounts = accounts::whereNotIn("\151\144", array(2, 3))->get(); return view("\106\x69\156\x61\x6e\143\145\x2e\164\162\141\156\163\146\145\162\56\151\x6e\144\145\170", compact("\164\x72\141\x6e\163\146\x65\162\x73", "\x61\143\143\x6f\x75\x6e\164\x73")); } public function create() { } public function store(Request $request) { $request->validate(array("\x74\x6f" => "\144\x69\x66\146\x65\162\x65\156\164\72\146\x72\157\155"), array("\164\157\x2e\x64\151\x66\x66\145\162\145\156\x74" => "\x46\x72\x6f\x6d\x20\141\x6e\x64\40\124\x6f\40\101\143\143\157\x75\x6e\164\x73\40\x4d\165\x73\x74\40\x62\145\40\x64\x69\x66\146\x65\162\145\x6e\164")); try { DB::beginTransaction(); $ref = getRef(); $transfer = transfer::create(array("\x66\162\157\x6d" => $request->from, "\x74\157" => $request->to, "\x64\x61\x74\x65" => $request->date, "\x61\155\157\165\156\x74" => $request->amount, "\x6e\x6f\x74\x65\x73" => $request->notes, "\x72\145\146\111\x44" => $ref)); $fromAccount = $transfer->fromAccount->title; $toAccount = $transfer->toAccount->title; createTransaction($request->from, $request->date, 0, $request->amount, "\124\162\141\156\163\146\x65\x72\145\144\40\164\x6f\40{$toAccount}\x20\x3c\142\162\76\x20{$request->notes}", $ref, "\x54\x72\141\x6e\163\x66\x65\x72"); createTransaction($request->to, $request->date, $request->amount, 0, "\124\162\x61\156\x73\x66\x65\162\x65\144\x20\x66\162\x6f\x6d\40{$fromAccount}\40\x3c\142\x72\x3e\40{$request->notes}", $ref, "\x54\162\141\156\x73\x66\145\162"); DB::commit(); return back()->with("\163\x75\143\x63\145\163\x73", "\124\x72\x61\156\x73\146\x65\162\145\x64\x20\x53\165\143\x63\145\163\163\x66\x75\154\154\171"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\145\x72\x72\157\x72", $e->getMessage()); } } public function show(transfer $transfer) { } public function edit(transfer $transfer) { } public function update(Request $request, transfer $transfer) { } public function delete($ref) { try { DB::beginTransaction(); transfer::where("\162\145\x66\x49\104", $ref)->delete(); transactions::where("\x72\x65\x66\111\x44", $ref)->delete(); DB::commit(); session()->forget("\x63\x6f\156\146\151\x72\155\x65\144\x5f\160\141\x73\x73\167\x6f\162\x64"); return redirect()->route("\164\x72\141\156\163\x66\x65\x72\x73\56\151\x6e\144\145\x78")->with("\163\165\x63\x63\x65\163\163", "\x54\x72\141\156\163\146\145\162\x20\104\x65\x6c\145\164\x65\144"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\143\x6f\156\x66\151\x72\155\145\144\x5f\x70\x61\163\163\167\x6f\162\144"); return redirect()->route("\x74\162\x61\x6e\x73\146\x65\162\x73\x2e\x69\156\x64\145\x78")->with("\145\x72\162\157\x72", $e->getMessage()); } } }