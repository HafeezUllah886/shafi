<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\deposit_withdraw; use App\Models\transactions; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class DepositWithdrawController extends Controller { public function index() { $trans = deposit_withdraw::orderBy("\151\144", "\144\145\x73\143")->get(); $accounts = accounts::orderby("\164\171\160\x65", "\x61\163\x63")->orderby("\164\151\164\x6c\145", "\x61\163\143")->get(); return view("\106\151\x6e\141\156\x63\x65\56\144\x65\x70\157\x73\151\x74\137\x77\151\164\150\144\162\141\x77\56\x69\156\x64\x65\170", compact("\x74\x72\x61\x6e\x73", "\141\143\143\x6f\165\x6e\164\163")); } public function create() { } public function store(Request $request) { try { DB::beginTransaction(); $ref = getRef(); deposit_withdraw::create(array("\x61\143\143\x6f\165\x6e\x74\x49\x44" => $request->accountID, "\x64\141\x74\145" => $request->date, "\164\171\x70\x65" => $request->type, "\x61\x6d\x6f\x75\x6e\164" => $request->amount, "\x6e\x6f\x74\x65\x73" => $request->notes, "\162\x65\146\111\x44" => $ref)); if ($request->type == "\104\x65\x70\157\x73\x69\x74") { createTransaction($request->accountID, $request->date, $request->amount, 0, "\104\x65\x70\x6f\x73\151\164\72\40" . $request->notes, $ref, "\x44\145\160\x6f\x73\151\x74"); } else { createTransaction($request->accountID, $request->date, 0, $request->amount, "\x57\151\x74\x68\x64\162\x61\x77\72\x20" . $request->notes, $ref, "\x57\151\x74\x68\x64\162\141\x77"); } DB::commit(); return back()->with("\x73\165\x63\x63\145\163\x73", "\124\x72\141\x6e\x73\141\143\164\151\157\156\x20\x43\162\145\141\x74\x65\x64"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\x65\x72\162\157\x72", $e->getMessage()); } } public function show(deposit_withdraw $deposit_withdraw) { } public function edit(deposit_withdraw $deposit_withdraw) { } public function update(Request $request, deposit_withdraw $deposit_withdraw) { } public function delete($ref) { try { DB::beginTransaction(); deposit_withdraw::where("\162\145\146\x49\104", $ref)->delete(); transactions::where("\162\145\146\x49\104", $ref)->delete(); DB::commit(); session()->forget("\x63\x6f\156\x66\151\x72\x6d\x65\144\137\160\x61\x73\163\x77\x6f\x72\x64"); return redirect()->route("\144\x65\160\x6f\163\x69\164\137\167\151\164\150\x64\162\x61\x77\56\x69\156\144\x65\170")->with("\163\165\x63\x63\x65\x73\x73", "\x54\162\141\156\163\141\x63\164\151\x6f\156\40\104\145\154\x65\x74\145\x64"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\x6f\156\146\151\x72\x6d\x65\x64\137\160\x61\163\163\167\x6f\162\144"); return redirect()->route("\144\x65\x70\x6f\163\151\x74\137\x77\x69\164\150\144\x72\x61\x77\x2e\151\x6e\144\145\170")->with("\x65\x72\x72\157\x72", $e->getMessage()); } } }