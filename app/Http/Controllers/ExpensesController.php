<?php
 namespace App\Http\Controllers; use App\Models\accounts; use App\Models\expenseCategories; use App\Models\expenses; use App\Models\transactions; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class ExpensesController extends Controller { public function index() { $expenses = expenses::orderby("\x69\x64", "\144\x65\x73\143")->get(); $accounts = accounts::business()->get(); $categories = expenseCategories::all(); return view("\x46\x69\x6e\x61\x6e\143\145\56\x65\x78\x70\145\x6e\163\145\x2e\151\156\x64\x65\x78", compact("\145\170\160\x65\x6e\x73\x65\x73", "\x61\143\143\157\x75\156\164\x73", "\x63\x61\x74\x65\147\x6f\162\x69\x65\x73")); } public function create() { } public function store(Request $request) { try { DB::beginTransaction(); $ref = getRef(); expenses::create(array("\x61\x63\x63\x6f\x75\x6e\164\x49\104" => $request->accountID, "\143\141\164\x49\x44" => $request->catID, "\141\155\157\165\x6e\x74" => $request->amount, "\144\x61\164\145" => $request->date, "\x6e\157\164\x65\x73" => $request->notes, "\x72\145\x66\111\104" => $ref)); createTransaction($request->accountID, $request->date, 0, $request->amount, "\x45\170\x70\145\x6e\x73\x65\40\x2d\40" . $request->notes, $ref); DB::commit(); return back()->with("\163\x75\x63\143\x65\163\163", "\105\170\x70\x65\x6e\x73\x65\x20\123\x61\x76\x65\x64"); } catch (\Exception $e) { DB::rollBack(); return back()->with("\145\162\x72\x6f\162", $e->getMessage()); } } public function show(expenses $expenses) { } public function edit(expenses $expenses) { } public function update(Request $request, expenses $expenses) { } public function delete($ref) { try { DB::beginTransaction(); expenses::where("\x72\x65\x66\111\x44", $ref)->delete(); transactions::where("\162\145\x66\x49\104", $ref)->delete(); DB::commit(); session()->forget("\x63\x6f\x6e\146\151\x72\155\x65\144\x5f\x70\141\163\x73\x77\157\162\x64"); return redirect()->route("\145\170\160\x65\x6e\163\145\x73\56\x69\156\x64\x65\170")->with("\x73\165\143\x63\145\x73\x73", "\105\170\160\x65\x6e\163\145\x20\104\145\x6c\145\x74\145\144"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\x63\157\x6e\x66\151\162\155\x65\144\x5f\x70\141\163\x73\x77\x6f\162\x64"); return redirect()->route("\x65\170\160\145\x6e\x73\x65\x73\56\x69\x6e\x64\x65\x78")->with("\x65\162\x72\x6f\x72", $e->getMessage()); } } }