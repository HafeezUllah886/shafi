<?php
 namespace App\Http\Controllers; use App\Models\categories; use App\Models\products; use App\Models\quotation; use App\Models\quotationDetails; use Barryvdh\DomPDF\Facade\Pdf; use Exception; use Illuminate\Http\Request; use Illuminate\Support\Facades\DB; class QuotationController extends Controller { public function index() { $quotations = quotation::orderBy("\151\x64", "\144\145\163\143")->get(); return view("\x71\x75\157\x74\x61\x74\151\157\156\56\151\156\x64\x65\x78", compact("\161\x75\157\164\x61\164\x69\157\156\x73")); } public function create() { $products = products::orderby("\156\x61\x6d\x65", "\141\x73\x63")->get(); $cats = categories::orderBy("\x6e\x61\155\145", "\141\x73\143")->get(); return view("\161\165\x6f\164\x61\x74\151\x6f\156\56\x63\x72\x65\141\164\145", compact("\160\x72\x6f\144\165\x63\164\163", "\143\x61\x74\x73")); } public function store(Request $request) { try { if ($request->isNotFilled("\x69\144")) { throw new Exception("\x50\x6c\145\x61\163\x65\x20\123\145\154\145\x63\164\x20\101\164\154\145\x61\163\x74\40\117\x6e\x65\40\x50\x72\x6f\144\x75\x63\164"); } DB::beginTransaction(); $quot = quotation::create(array("\x63\x75\x73\x74\157\x6d\145\162\x4e\x61\155\x65" => $request->customer, "\x63\165\x73\x74\x6f\x6d\x65\162\101\144\x64\162\x65\x73\163" => $request->address, "\156\157\164\145\x73" => $request->notes, "\144\x69\x73\143\x6f\x75\156\164" => $request->discount, "\144\x63" => $request->dc, "\x64\141\164\x65" => $request->date, "\x76\141\x6c\151\144\124\151\154\154" => $request->valid)); $ids = $request->id; $total = 0; foreach ($ids as $key => $id) { if ($request->amount[$key] > 0) { $qty = $request->qty[$key]; $price = $request->price[$key]; $total += $request->amount[$key]; quotationDetails::create(array("\x71\165\x6f\164\x49\104" => $quot->id, "\x70\x72\x6f\x64\165\143\164\x49\104" => $id, "\x70\162\151\x63\145" => $price, "\x71\164\x79" => $qty, "\x61\155\157\x75\x6e\164" => $request->amount[$key])); } } $discount = $request->discount; $dc = $request->dc; $net = $total + $dc - $discount; $quot->update(array("\164\157\x74\x61\154" => $net)); DB::commit(); return to_route("\161\x75\157\164\x61\x74\151\x6f\x6e\56\x73\x68\x6f\167", $quot->id)->with("\x73\x75\143\x63\145\x73\x73", "\x51\165\x6f\164\141\x74\151\x6f\156\x20\103\162\x65\x61\164\x65\144"); } catch (\Exception $e) { DB::rollback(); return back()->with("\x65\162\162\157\x72", $e->getMessage()); } } public function show($id) { $quot = quotation::find($id); return view("\161\x75\157\164\141\x74\x69\157\156\56\x76\x69\x65\167", compact("\x71\x75\x6f\x74")); } public function pdf($id) { $quot = quotation::find($id); $pdf = Pdf::loadview("\161\165\x6f\164\x61\164\x69\157\156\56\x70\x64\146", compact("\161\165\x6f\164")); return $pdf->download("\x51\165\x6f\164\x61\164\151\x6f\156\40\x4e\157\56\40{$quot->id}\56\160\144\146"); } public function edit(quotation $quotation) { } public function update(Request $request, quotation $quotation) { } public function destroy($id) { try { DB::beginTransaction(); $quot = quotation::find($id); foreach ($quot->details as $product) { $product->delete(); } $quot->delete(); DB::commit(); session()->forget("\143\x6f\156\146\x69\x72\155\x65\x64\x5f\160\141\163\x73\167\157\x72\x64"); return to_route("\x71\x75\157\x74\141\x74\x69\157\156\x2e\151\x6e\x64\x65\170")->with("\163\165\143\143\145\163\x73", "\121\x75\157\164\141\x74\x69\157\156\40\104\145\x6c\145\x74\145\144"); } catch (\Exception $e) { DB::rollBack(); session()->forget("\143\x6f\156\x66\151\x72\x6d\x65\144\137\160\141\x73\x73\x77\157\162\144"); return to_route("\161\x75\157\164\141\x74\x69\157\x6e\56\151\156\x64\x65\x78")->with("\x65\162\x72\x6f\x72", $e->getMessage()); } } }